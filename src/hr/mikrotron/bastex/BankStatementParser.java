package hr.mikrotron.bastex;

import java.text.ParseException;


/**Parser for PDF bank statement extracted as plain text
 * @author prexy
 * @version 0.1
 */
public class BankStatementParser {

	private Record record;
	
	/**Constructor excepts raw record data generated by PDFManager 
	 * and passes it to {@link Record Record}
	 * @param rawRecord output of PDFManager's getText()
	 */
	public BankStatementParser(String rawRecord){
		record = new Record(rawRecord);
	}
	
	/**Parses bank statement and transactions data
	 * @param bankStatement bank statement to be parsed
	 * @throws ParseException if data cannot be parsed to expected type
	 * @throws IndexOutOfBoundsException if searched string is not present in records
	 */
	public void parse(BankStatement bankStatement) throws ParseException, IndexOutOfBoundsException{
		parseBankStatementData(bankStatement);
		//TODO parseTransactions(bankStatement);
	}
	
	/**Parses bank statement related data
	 * @param bs bank statement to be parsed
	 * @throws ParseException if data cannot be parsed to expected type
	 * @throws IndexOutOfBoundsException if searched string is not present in records
	 */
	private void parseBankStatementData(BankStatement bs) throws ParseException, IndexOutOfBoundsException{
		bs.setNumber(record.asInt("Izvadak br.:", 1));
		bs.setDate(record.asDate("Datum izvatka:", 1));
		bs.setInputBalance(record.asDouble("Stanje prethodnog izvatka:", 1));
		bs.setDebitTransactionsTotal(record.asDouble("Ukupni dugovni promet na dan:",1)*-1);
		bs.setCreditTransacionsTotal(record.asDouble("Ukupni potra≈æni promet na dan:", 1));
		bs.setOutputBalance(record.asDouble("Novo stanje:", 1));
	}
	
}
